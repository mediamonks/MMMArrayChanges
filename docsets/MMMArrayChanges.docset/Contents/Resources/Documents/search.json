{"Extensions/Array.html#/diffUpdate(elementId:sourceArray:sourceElementId:transform:update:remove:)":{"name":"diffUpdate(elementId:sourceArray:sourceElementId:transform:update:remove:)","abstract":"<p>Updates the receiver so it consists only of transformed elements from another array,","parent_name":"Array"},"Extensions/Array.html#/compactDiffUpdate(elementId:sourceArray:sourceElementId:transform:update:remove:)":{"name":"compactDiffUpdate(elementId:sourceArray:sourceElementId:transform:update:remove:)","abstract":"<p>The same as <code>diffUpdate(elementId:sourceArray:transform:update:remove)</code> except that it","parent_name":"Array"},"Extensions/Array.html":{"name":"Array"},"Classes/MMMArrayChanges/Update.html#/oldIndex":{"name":"oldIndex","abstract":"<p>The index of the changed object in the <em>old</em> array.</p>","parent_name":"Update"},"Classes/MMMArrayChanges/Update.html#/newIndex":{"name":"newIndex","abstract":"<p>The index of the changed object in the <em>new</em> array.</p>","parent_name":"Update"},"Classes/MMMArrayChanges/Update.html#/init(_:_:)":{"name":"init(_:_:)","parent_name":"Update"},"Classes/MMMArrayChanges/Update.html#/description":{"name":"description","parent_name":"Update"},"Classes/MMMArrayChanges/Move.html#/oldIndex":{"name":"oldIndex","abstract":"<p>The index of the object being moved in the <em>old</em> array.</p>","parent_name":"Move"},"Classes/MMMArrayChanges/Move.html#/newIndex":{"name":"newIndex","abstract":"<p>The index of the object being moved in the <em>new</em> array.</p>","parent_name":"Move"},"Classes/MMMArrayChanges/Move.html#/init(_:_:_:_:)":{"name":"init(_:_:_:_:)","parent_name":"Move"},"Classes/MMMArrayChanges/Move.html#/description":{"name":"description","parent_name":"Move"},"Classes/MMMArrayChanges/Insertion.html#/init(_:)":{"name":"init(_:)","parent_name":"Insertion"},"Classes/MMMArrayChanges/Insertion.html#/description":{"name":"description","parent_name":"Insertion"},"Classes/MMMArrayChanges/Removal.html#/init(_:)":{"name":"init(_:)","parent_name":"Removal"},"Classes/MMMArrayChanges/Removal.html#/description":{"name":"description","parent_name":"Removal"},"Classes/MMMArrayChanges/Removal.html":{"name":"Removal","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges/Insertion.html":{"name":"Insertion","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges/Move.html":{"name":"Move","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges/Update.html":{"name":"Update","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/removals":{"name":"removals","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/insertions":{"name":"insertions","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/moves":{"name":"moves","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/updates":{"name":"updates","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/init(removals:insertions:moves:updates:)":{"name":"init(removals:insertions:moves:updates:)","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/isEmpty":{"name":"isEmpty","abstract":"<p>True if the receiver represents &ldquo;no changes&rdquo; situation.</p>","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/==(_:_:)":{"name":"==(_:_:)","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/description":{"name":"description","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/applyToArray(_:sourceArray:remove:transform:update:)":{"name":"applyToArray(_:sourceArray:remove:transform:update:)","abstract":"<p>Replays the changes represented by the receiver onto the given array (which in general is different from the array","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/applySkippingReloads(tableView:indexPathForItemIndex:deletionAnimation:insertionAnimation:)":{"name":"applySkippingReloads(tableView:indexPathForItemIndex:deletionAnimation:insertionAnimation:)","abstract":"<p>Replays the changes represented by the receiver onto a <code>UITableView</code> within a <code>beginUpdates()</code>/<code>endUpdates()</code> block.</p>","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/applyReloadsAfter(tableView:indexPathForItemIndex:reloadAnimation:)":{"name":"applyReloadsAfter(tableView:indexPathForItemIndex:reloadAnimation:)","abstract":"<p>Applies the changes corresponding to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MMMArrayChanges.html#/updates\">updates</a></code> property of the receiver as row reloads on the given table view","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/applyReloadsBefore(tableView:indexPathForItemIndex:reloadAnimation:)":{"name":"applyReloadsBefore(tableView:indexPathForItemIndex:reloadAnimation:)","abstract":"<p>Same as <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MMMArrayChanges.html#/applyReloadsAfter(tableView:indexPathForItemIndex:reloadAnimation:)\">applyReloadsAfter(tableView:indexPathForItemIndex:reloadAnimation:)</a></code> but assuming that other changes represented","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/byUpdatingArray(_:elementId:sourceArray:sourceElementId:update:remove:transform:)":{"name":"byUpdatingArray(_:elementId:sourceArray:sourceElementId:update:remove:transform:)","abstract":"<p>Finds UITableView-compatible differences between two arrays consisting of elements of different types","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/byUpdatingArrayOfObjects(_:sourceArray:update:remove:)":{"name":"byUpdatingArrayOfObjects(_:sourceArray:update:remove:)","abstract":"<p>A shortcut for the case when both arrays contain objects of reference types and their references can be used as","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html#/betweenSimpleArrays(oldArray:newArray:)":{"name":"betweenSimpleArrays(oldArray:newArray:)","abstract":"<p>Changes between two simple arrays consisting of the same hashable value types, so elements themselves can","parent_name":"MMMArrayChanges"},"Classes/MMMArrayChanges.html":{"name":"MMMArrayChanges","abstract":"<p>Finds the differences between two arrays with elements possibly of different types.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"}}